from rkinf.toolbox import blastn, fasta
from rkinf.cluster import start_cluster, stop_cluster, view
from rkinf.log import logger, setup_logging
import yaml
import sys
import csv


def main(config_file):
    with open(config_file) as in_handle:
        config = yaml.load(in_handle)
    setup_logging(config)
    start_cluster(config)
    in_file = config.get("query")

    # non-parallel for now
    blast_results = []
    for ref in config.get("ref", []):
        blast_result = blastn.run(in_file, ref=ref, config=config)
        blast_results.append(out_file)

    for 

    fasta_hits = set()
    for out_file in out_files:
        fasta_hits.update(blastn.get_id_of_hits(out_file))

    def in_set_predicate(x):
        return x.id in fasta_hits

    logger.info(fasta_hits)
    # filter the fasta file for only those that have hits
    fasta.filter_fasta(in_file, in_set_predicate, suffix="filt")

    #logger.info(fasta_hits)
    stop_cluster()

if __name__ == "__main__":
    main(*sys.argv[1:])
